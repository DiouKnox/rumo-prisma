apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "application.labels" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
  name: {{ include "application.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      deployment: {{ .Chart.Name }}
      app: {{ .Chart.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: '{{ .Values.metrics.port }}'
        prometheus.io/scheme: http
        prometheus.io/scrape: 'true'
        timestamp: "{{ .Values.timestamp }}"
      labels:
        deployment: {{ .Chart.Name }}
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ include "application.fullname" . }}
      containers:
      - name: git-sync
        image: k8s.gcr.io/git-sync:v3.1.3
        volumeMounts:
        - name: api-specs
          mountPath: /etc/devportal
        env:
        - name: GIT_SYNC_REPO
          value: "{{ .Values.apiSpecsGitRepository }}"
        - name: GIT_SYNC_BRANCH
          value: "{{ .Values.apiSpecsBranchName }}"
        - name: GIT_SYNC_DEST
          value: specs
        - name: GIT_SYNC_ROOT
          value: /etc/devportal
        - name: GIT_SYNC_USERNAME
          valueFrom:
            secretKeyRef:
              name: bitbucket-api-specs-access-devportal
              key: username
        - name: GIT_SYNC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bitbucket-api-specs-access-devportal
              key: password
        - name: GIT_SYNC_WAIT
          value: "{{ .Values.apiSpecsSyncInterval }}"
      - name: prometheus-exporter
        image: nginx/nginx-prometheus-exporter:0.4.2
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
        livenessProbe:
          failureThreshold: 3
          tcpSocket:
            port: {{ .Values.metrics.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: {{ .Values.metrics.port }}
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        command: [ "/usr/bin/exporter", "-nginx.scrape-uri", "http://localhost:{{ .Values.service.port }}/stub_status" ]
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - name: devportal-default-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
          - name: api-specs
            mountPath: /etc/devportal/apis
        ports:
        - name: nginx
          containerPort: {{ .Values.service.port }}
        livenessProbe:
          failureThreshold: 3
          tcpSocket:
            port: {{ .Values.service.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          tcpSocket:
            port: {{ .Values.service.port }}
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 20Mi
            cpu: "0.1"
      {{- if .Values.oauthproxy.enabled }}
      - name: oauthproxy
        image: 962245687334.dkr.ecr.sa-east-1.amazonaws.com/louketo-proxy:1.0.0
        args: [ "--config", "/etc/config/config.yaml" ]
        ports:
         - name: oauthproxy
           containerPort: {{ .Values.oauthproxy.port }}
        livenessProbe:
          failureThreshold: 3
          tcpSocket:
            port: {{ .Values.oauthproxy.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          tcpSocket:
            port: {{ .Values.oauthproxy.port }}
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - name: oauthproxy-config
          mountPath: /etc/config
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: devportal-default-conf
          configMap:
            name: devportal-default-conf
        - name: api-specs
          emptyDir: {}
        {{- if .Values.oauthproxy.enabled }}
        - name: oauthproxy-config
          secret:
            secretName: {{ .Values.oauthproxy.configSecret }}
        {{- end }}
